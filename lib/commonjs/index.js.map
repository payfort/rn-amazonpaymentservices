{"version":3,"names":["_CustomCheckoutViewManager","_interopRequireDefault","require","_DirectPayManager","_getDeviceId","_StandardCheckoutViewManager","_ApplePayModule","_reactNative","e","__esModule","default","CustomCheckoutView","props","CustomCheckoutViewManager","exports","StandardCheckout","StandardCheckoutViewManager","DirectPayButton","DirectPayManager","getDeviceId","getSDKDeviceId","ApplePay","isAvailable","Platform","OS","console","log","ApplePayModule","isApplePayAvailable","error","startPayment","paymentDetails","result"],"sources":["index.tsx"],"sourcesContent":["import CustomCheckoutViewManager from './views/CustomCheckoutViewManager';\nimport DirectPayManager from './views/DirectPayManager';\nimport type {\n  ApplePayRequest,\n  RequestObject,\n  RequestObjectDirectPay,\n} from './types/requestObject';\nimport { getSDKDeviceId } from './services/getDeviceId';\nimport StandardCheckoutViewManager from './views/StandardCheckoutViewManager';\nimport type {\n  customCheckoutViewProps,\n  standardCheckoutViewProps,\n} from './types/viewProps';\nimport ApplePayModule from './nativeModules/ApplePayModule';\nimport { Platform } from 'react-native';\n\nexport const CustomCheckoutView = (props: customCheckoutViewProps) => {\n  return CustomCheckoutViewManager(props);\n};\n\nexport const StandardCheckout = (props: standardCheckoutViewProps) => {\n  return StandardCheckoutViewManager(props);\n};\n\nexport const DirectPayButton = (props: customCheckoutViewProps) => {\n  return DirectPayManager(props);\n};\n\nexport const getDeviceId = getSDKDeviceId;\n\nexport type FortRequestObject = RequestObject;\n\nexport type FortRequestObjectDirectPay = RequestObjectDirectPay;\n\n\nexport const ApplePay = {\n  isAvailable: async () => {\n    if (Platform.OS !== 'ios') {\n      console.log('Apple Pay is not available on this platform.');\n      return false;\n    }\n    try {\n      const isAvailable = await ApplePayModule.isApplePayAvailable();\n      console.log('Apple Pay supported:', isAvailable);\n      return isAvailable;\n    } catch (error) {\n      console.log('Error checking Apple Pay support:', error);\n      return false;\n    }\n  },\n  startPayment: async (paymentDetails: ApplePayRequest) => {\n    try {\n      const result = await ApplePayModule.startPayment(paymentDetails);\n      return result;\n    } catch (error) {\n      throw error; \n    }\n  },\n};\n"],"mappings":";;;;;;AAAA,IAAAA,0BAAA,GAAAC,sBAAA,CAAAC,OAAA;AACA,IAAAC,iBAAA,GAAAF,sBAAA,CAAAC,OAAA;AAMA,IAAAE,YAAA,GAAAF,OAAA;AACA,IAAAG,4BAAA,GAAAJ,sBAAA,CAAAC,OAAA;AAKA,IAAAI,eAAA,GAAAL,sBAAA,CAAAC,OAAA;AACA,IAAAK,YAAA,GAAAL,OAAA;AAAwC,SAAAD,uBAAAO,CAAA,WAAAA,CAAA,IAAAA,CAAA,CAAAC,UAAA,GAAAD,CAAA,KAAAE,OAAA,EAAAF,CAAA;AAEjC,MAAMG,kBAAkB,GAAIC,KAA8B,IAAK;EACpE,OAAO,IAAAC,kCAAyB,EAACD,KAAK,CAAC;AACzC,CAAC;AAACE,OAAA,CAAAH,kBAAA,GAAAA,kBAAA;AAEK,MAAMI,gBAAgB,GAAIH,KAAgC,IAAK;EACpE,OAAO,IAAAI,oCAA2B,EAACJ,KAAK,CAAC;AAC3C,CAAC;AAACE,OAAA,CAAAC,gBAAA,GAAAA,gBAAA;AAEK,MAAME,eAAe,GAAIL,KAA8B,IAAK;EACjE,OAAO,IAAAM,yBAAgB,EAACN,KAAK,CAAC;AAChC,CAAC;AAACE,OAAA,CAAAG,eAAA,GAAAA,eAAA;AAEK,MAAME,WAAW,GAAAL,OAAA,CAAAK,WAAA,GAAGC,2BAAc;AAOlC,MAAMC,QAAQ,GAAAP,OAAA,CAAAO,QAAA,GAAG;EACtBC,WAAW,EAAE,MAAAA,CAAA,KAAY;IACvB,IAAIC,qBAAQ,CAACC,EAAE,KAAK,KAAK,EAAE;MACzBC,OAAO,CAACC,GAAG,CAAC,8CAA8C,CAAC;MAC3D,OAAO,KAAK;IACd;IACA,IAAI;MACF,MAAMJ,WAAW,GAAG,MAAMK,uBAAc,CAACC,mBAAmB,CAAC,CAAC;MAC9DH,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAEJ,WAAW,CAAC;MAChD,OAAOA,WAAW;IACpB,CAAC,CAAC,OAAOO,KAAK,EAAE;MACdJ,OAAO,CAACC,GAAG,CAAC,mCAAmC,EAAEG,KAAK,CAAC;MACvD,OAAO,KAAK;IACd;EACF,CAAC;EACDC,YAAY,EAAE,MAAOC,cAA+B,IAAK;IACvD,IAAI;MACF,MAAMC,MAAM,GAAG,MAAML,uBAAc,CAACG,YAAY,CAACC,cAAc,CAAC;MAChE,OAAOC,MAAM;IACf,CAAC,CAAC,OAAOH,KAAK,EAAE;MACd,MAAMA,KAAK;IACb;EACF;AACF,CAAC","ignoreList":[]}